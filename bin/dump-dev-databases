#!/usr/bin/env python

import argparse
import os
import sys


def dump_postgres(dir):
    print("dumping postgres databases to: {}".format(dir))

    cmd = "psql -d postgres -q -t -c 'SELECT datname from pg_database'"
    s = os.popen(cmd)

    dbs = [d.strip() for d in s.read().split("\n") if d]

    for db in dbs:
        path = os.path.join(dir, "{}.dump".format(db))
        print("dumping {}".format(path))

        dump_cmd = 'pg_dump -Fc "{db}" >! "{path}"'.format(
            db=db, path=path
        )

        # print(dump_cmd)

        os.system(dump_cmd)


def dump_mysql(dir):
    print("dumping mysql databases to: {}".format(dir))

    user = "root"
    password = "root"

    cmd = "mysql -u{user} -p{password} -e 'show databases' -s -N 2>/dev/null".format(
        user=user, password=password
    )

    s = os.popen(cmd)
    dbs = [d for d in s.read().split("\n") if d]

    for db in dbs:
        path = os.path.join(dir, "{}.sql".format(db))
        print("dumping {}".format(path))

        dump_cmd = 'mysqldump -u{user} -p{password} --complete-insert "{db}" >! "{path}"'.format(
            user=user, password=password, db=db, path=path
        )

        os.system(dump_cmd)


if __name__ == "__main__":

    """
    usage:
    
        ./bin/dump-dev-databases -t ~/Drive/Jonas/__development/databases/mysql/ -d mysql
        ./bin/dump-dev-databases -t ~/Drive/Jonas/__development/databases/postgres/ -d postgres
    """

    parser = argparse.ArgumentParser(description="VAULT synch")
    parser.add_argument("-t", "--target", dest="target", default=".")
    parser.add_argument(
        "-d",
        "--db",
        dest="db",
        default="postgres",
        required=True,
        choices={"postgres", "mysql"},
    )

    args = parser.parse_args()

    if not os.path.isdir(args.target):
        raise Exception("invalid target directory: {}".format(args.target))

    if args.db == "postgres":
        dump_postgres(args.target)

    if args.db == "mysql":
        dump_mysql(args.target)
